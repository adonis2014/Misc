1. PUT blob (in EI)
[yinzhang@lca1-app0680 ~]$ curl -i -H "x-ambry-target-account-name:ambry-internal-store" -H "x-ambry-target-container-name:shared-files" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:yinzhang" -H "x-ambry-content-type:text/csv" -H "x-ambry-um-description:gaap-online-tasks-misplaced-blobs" -H "x-li-ambry-client:Internal" http://lca1-app0680.stg.linkedin.com:15158 --data-binary @gaap-online-tasks.csv

HTTP/1.1 201 Created
Location: /AAMAAQQMAAkAAQAAAAAAAACYAAAAJGFkOWZhODkzLTc4ODAtNGJlZi1iYzdkLTg3ODZiNGI4ODM2NA.csv
Date: Thu, 01 Mar 2018 00:31:51 GMT
Content-Length: 0
x-ambry-creation-time: Thu, 01 Mar 2018 00:31:33 GMT
Access-Control-Expose-Headers: Location

#----------------------------------------------------------------------------------------------------------------------------#

2. PUT blob (in PROD)
[yinzhang@lva1-app18926 ~]$ curl -i -H "x-ambry-target-account-name:ambry-internal-store" -H "x-ambry-target-container-name:shared-files" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:yinzhang" -H "x-ambry-content-type:text/csv" -H "x-li-ambry-client:Internal" http://lva1-app18926.prod.linkedin.com:15158 --data-binary @test.csv

HTTP/1.1 201 Created
Location: /AAMAAgQfAAkAAQAAAAAAAAzaAAAAJGViZDk4YWI1LWYwMDItNDZlYi05MGE1LTc3ZmEwOWVjNGJiMA.csv
Date: Fri, 16 Mar 2018 21:52:58 GMT
Content-Length: 0
x-ambry-creation-time: Fri, 16 Mar 2018 21:52:56 GMT
Access-Control-Expose-Headers: Location

#----------------------------------------------------------------------------------------------------------------------------#

3. DELETE blob (in PROD)
[yinzhang@lva1-app18926 ~]$ curl -i -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app18926.prod.linkedin.com:15158/ambry/AAMAAgQfAAkAAQAAAAAAAAzaAAAAJGViZDk4YWI1LWYwMDItNDZlYi05MGE1LTc3ZmEwOWVjNGJiMA.csv

HTTP/1.1 202 Accepted
Date: Fri, 16 Mar 2018 21:55:17 GMT
Content-Length: 0

#----------------------------------------------------------------------------------------------------------------------------#

4. DELETE blob (in EI)
[yinzhang@lca1-eng-portal02 ~]$ curli -i -H "x-li-ambry-client:Internal" -X DELETE d2://ambry/AAMAAQQMAAkAAQAAAAAAAADPAAAAJDE2NjZhNzI4LWNiZmQtNDdkNC1iZTUwLWVhN2E1NzlmZjQzYw.csv

[INFO] Current profile set to default: yinzhang-mn1.linkedin.biz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
HTTP/1.1 202 Accepted
Date: Thu, 01 Mar 2018 22:43:12 GMT
Content-Length: 0

#----------------------------------------------------------------------------------------------------------------------------#

5. GET blob (in EI)
[yinzhang@lca1-eng-portal02 ~]$ curli -s --no-log --fabric ei-ltx1 -i -H "x-li-ambry-client:Internal" d2://ambry/AAMA______8AAQAAAAAAAAAAAAAAJDlkNGRlMTEzLTE5MWItNDA5MC05OGUzLTQ1ZWYzY2Y4MTE2ZQ.bin

[INFO] Current profile set to default: yinzhang-mn1.linkedin.biz
HTTP/1.1 404 Not Found
Content-Type: text/plain;charset=utf-8
Date: Thu, 01 Mar 2018 21:40:36 GMT
x-ambry-error-code: NotFound
Content-Length: 0

#----------------------------------------------------------------------------------------------------------------------------#

6. GET blob (in PROD)
[yinzhang@lva1-app18926 ~]$ curl -s -i -H "x-li-ambry-client:Internal" http://lva1-app18926.prod.linkedin.com:15158/AAMA______8AAQAAAAAAAAAAAAAAJDlkNGRlMTEzLTE5MWItNDA5MC05OGUzLTQ1ZWYzY2Y4MTE2ZQ.bin

HTTP/1.1 404 Not Found
date: Fri, 16 Mar 2018 21:17:33 GMT
content-length: 0
x-ambry-error-code: NotFound
content-type: text/plain; charset=UTF-8

#----------------------------------------------------------------------------------------------------------------------------#

7. GET blobInfo (in EI)
[yinzhang@lca1-eng-portal02 ~]$ curli -s --no-log --fabric ei-ltx1 -I -H "x-li-ambry-client:Internal" d2://ambry/AAMA______8AAQAAAAAAAAAAAAAAJDlkNGRlMTEzLTE5MWItNDA5MC05OGUzLTQ1ZWYzY2Y4MTE2ZQ.bin

[INFO] Current profile set to default: yinzhang-mn1.linkedin.biz
HTTP/1.1 404 Not Found
Content-Type: text/plain;charset=utf-8
Date: Thu, 01 Mar 2018 21:40:48 GMT
x-ambry-error-code: NotFound
Content-Length: 0
或者可以用http://lva1...(any frontend):15158/BlobId 替代 d2

#----------------------------------------------------------------------------------------------------------------------------#

7. GET blobInfo (in PROD)
[yinzhang@lva1-app18926 ~]$ curl -s -i -H "x-li-ambry-client:Internal" http://lva1-app18926.prod.linkedin.com:15158/AAMA______8AAQAAAAAAAAAAAAAAJDlkNGRlMTEzLTE5MWItNDA5MC05OGUzLTQ1ZWYzY2Y4MTE2ZQ.bin/BlobInfo

HTTP/1.1 404 Not Found
date: Fri, 16 Mar 2018 21:18:36 GMT
content-length: 0
x-ambry-error-code: NotFound
content-type: text/plain; charset=UTF-8

#----------------------------------------------------------------------------------------------------------------------------#

8. Bring down lva1-app6772.prod.linkedin.com which is one replica of partition 0 in prod-lva1:
lid-client control stop -f prod-lva1 -t ambry-server-main -H lva1-app6772.prod.linkedin.com AmbryLI

#----------------------------------------------------------------------------------------------------------------------------#

9. Bring down lca1-app1373.stg.linkedin.com which is one replica of partition 0 in ei-lca1:
lid-client control stop -f ei-lca1 -t ambry-server-main -H lca1-app1373.stg.linkedin.com AmbryLI

#----------------------------------------------------------------------------------------------------------------------------#

10. Bring back lva1-app6772.prod.linkedin.com:
[yinzhang@lva1-app18926 ~]$ lid-client control start -f prod-lva1 -t ambry-server-main -H lva1-app6772.prod.linkedin.com AmbryLI

#----------------------------------------------------------------------------------------------------------------------------#

11. Check Server status:

[yinzhang@lca1-app0680 ~]$ app-status -t ambry-server-main -f ei-lca1

ambry-server lca1-app1373.stg.linkedin.com i001 ambry-server-main 16.1.1 15151:GOOD  f76d7ea9-64ca-4eee-9a7b-1d98bfe18d48

12. check versions for mp
[yinzhang-mn1:~ yinzhang]$ mint describe oauth-filter

13. check the dependency for Multiproduct by ligradle.
[yinzhang-mn1:ambryli_trunk yinzhang]$ ligradle :ambry-impl:dependencyInsight --configuration compile --dependency depo-rest-api

14. git push ambryli-utils and ambryli_trunk override
    PCLOVERRIDE            # ambryli-utils
    PCVALIDATIONOVERRIDE   # ambryli_trunk  (also used when there is circular dependency)
    
15. ssh eng-portal  # log into lca1-eng-portal02

16. [yinzhang@lca1-eng-portal02 ~]$ app-status -fg prod -t ambry-server-main --use-intended | grep -i CANARY  # check which servers are in canary
    [yinzhang@lca1-eng-portal03 ~]$ app-status -fg prod -t ambry-server-main | grep -v 16.1.98 #find node whose version is NOT 16.1.98

17. Hadoop SQL query (go/reportal, perform these queries)
    (1) use tracking;
        select blobUrn, blobProperties from AmbryOperationEvent 
        where datepartition >= '2017-12-01-00' and datepartition < '2018-01-31-00' and 
        blobProperties.appName = "gaap-online-tasks" and blobProperties.accountId != 209 and operationType = "PUT";
        
    (2) use tracking;
        select blobUrn, blobProperties from AmbryOperationEvent 
        where datepartition >= '2017-12-01-00' and datepartition < '2018-01-31-00' and 
        blobProperties.appName = "gaap-engine" and blobProperties.accountId != 315 and operationType = "PUT";
        
18. The log segments and indexing segments directory on production machine:
    [yinzhang@lca1-app1373 ambrydata]$ pwd
    /mnt/u001/ambrydata
    [yinzhang@lca1-app1373 ambrydata]$ ls 101/
    0_0_18_index  0_0_log  cleanuptoken  StoreDescriptor
    
19. The error log on production machine is located at: /export/content/lid/apps/ambry-server/i001/
    Example:
    [yinzhang@lca1-app1373 ambrydata]$ ls /export/content/lid/apps/ambry-server/i001/
    agents  appsConfig  bin  boot  components  conf  containerConfig  hooks  lib  logs  predeploy  resources  tmp  var  war  webapps
    [yinzhang@lca1-app1373 i001]$ cd logs/
    
#----------------------------------------------------------------------------------------------------------------------------#
20. deploy to qei:
    mint build && mint build-cfg --fabric qei-lca1 && mint deploy -a ambry-frontend --fabric qei-lca1 --skip-qei-routes --debug-app
 
21.1 deploy locally:
    mint build && mint build-cfg && mint release && mint release-cfg && mint deploy
    
21.2 undeploy locally:
    mint undeploy
#----------------------------------------------------------------------------------------------------------------------------#
22. upload to unencrypted container locally.
    [zemao@zemao-mn2]:~ $ curli -s -i --fabric ei-lca1 -H "x-ambry-target-account-name:ambryClientUnitTest" -H "x-ambry-target-container-name:container-a" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:ambry-test" -H "x-ambry-content-type:text" -H "x-ambry-um-description:static upload" -H "x-li-ambry-client:Internal" http://zemao-mn2.linkedin.biz:15158 --data-binary @1m.bin
    get BlobInfo.
    [zemao@zemao-mn2]:~ $ curl -i "http://zemao-mn2.linkedin.biz:15158/AAMAAQBoAAIAAQAAAAAAAAAAAAAAJGY4ZjllMThiLTI3YzctNGIwNy05Nzc5LTEyMTY1YWE3N2M0Yg.bin/BlobInfo" -H "x-li-ambry-client: Internal"
    HTTP/1.1 200 OK
    Date: Mon, 16 Apr 2018 19:10:19 GMT
    Last-Modified: Mon, 16 Apr 2018 19:09:47 GMT
    x-ambry-blob-size: 10
    x-ambry-service-id: CUrlUpload
    x-ambry-creation-time: Mon, 16 Apr 2018 19:09:47 GMT
    x-ambry-encrypted-in-storage: false
    x-ambry-content-type: text
    x-ambry-owner-id: ambry-test
    x-ambry-target-account-name: ambryClientUnitTest
    x-ambry-target-container-name: container-a
    x-ambry-private: false
    x-ambry-um-description: static upload
    Content-Length: 0
    
#----------------------------------------------------------------------------------------------------------------------------#
 23. upload to encrypted container locally.
     [zemao@zemao-mn2]:~ $ curli -s -i --fabric ei-lca1 -H "x-ambry-target-account-name:ambryClientUnitTest" -H "x-ambry-target-container-name:public-enc" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:ambry-test" -H "x-ambry-content-type:text" -H "x-ambry-um-description:static upload" -H "x-li-ambry-client:Internal" http://zemao-mn2.linkedin.biz:15158 --data-binary @1m.bin
     [zemao@zemao-mn2]:~ $ curl -i "http://zemao-mn2.linkedin.biz:15158/AAMAAQBoAAgAAQAAAAAAAAAAAAAAJGQxMWNmOWMxLWZmNWYtNDAxOC1hYmY1LTAzNmI1MzhkNWU4Yw.bin/BlobInfo" -H "x-li-ambry-client: Internal"
      HTTP/1.1 200 OK
      Date: Mon, 16 Apr 2018 19:07:56 GMT
      Last-Modified: Mon, 16 Apr 2018 19:06:26 GMT
      x-ambry-blob-size: 1048576
      x-ambry-service-id: CUrlUpload
      x-ambry-creation-time: Mon, 16 Apr 2018 19:06:26 GMT
      x-ambry-encrypted-in-storage: true
      x-ambry-content-type: text
      x-ambry-owner-id: ambry-test
      x-ambry-target-account-name: ambryClientUnitTest
      x-ambry-target-container-name: public-enc
      x-ambry-private: false
      x-ambry-um-description: static upload
      Content-Length: 0

[zemao@lca1-eng-portal02 ~]$ curli --fabric prod-lva1 d2://ambry/p/7/005/025/22b/1963b30.png -I -H "x-li-ambry-client:Internal"
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
HTTP/1.1 403 Forbidden
Content-Type: text/plain;charset=utf-8
Date: Thu, 03 May 2018 23:55:55 GMT
x-ambry-error-code: AccessDenied
x-ambry-failure-reason: (Principal:Principal: {type: SERVICE_PRINCIPAL, applicationName: d2-proxy, instance: i001, fabric: prod-lva1}, Operation:READ) denied by non-compliant ID lix; x-li-ambry-mapped-compliant-id:/AAMB_wQWAAgAAQAAAAAAAAD5AAAAJDM4MjVkZmViLWQ5NGYtNDY2OS1hNDRkLTQ0MjQwM2EwM2ViYw.png
Content-Length: 0

[Conditional Delete Test]

// PUT a blob
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:CUrlTester" -H "x-ambry-target-container-name:container-a" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:yinzhang" -H "x-ambry-content-type:text/csv" -H "x-li-ambry-client:Internal" http://lva1-app8938.prod.linkedin.com:15158 --data-binary @test.csv
HTTP/1.1 201 Created
Location: /AAMAAgCAAAIAAQAAAAAAAAydAAAAJGFlNGEwMmEzLTAwNDYtNGQ1YS05ZmQ4LTE0YTJlNGM2ZWEwYw.csv
Date: Mon, 16 Apr 2018 20:46:33 GMT
Content-Length: 0
x-ambry-creation-time: Mon, 16 Apr 2018 20:46:32 GMT
Access-Control-Expose-Headers: Location

// DELETE a blob with incorrect account name
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:IncorrectCUrlTester" -H "x-ambry-target-container-name:container-a" -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app8938.prod.linkedin.com:15158/ambry/AAMAAgCAAAIAAQAAAAAAAAydAAAAJGFlNGEwMmEzLTAwNDYtNGQ1YS05ZmQ4LTE0YTJlNGM2ZWEwYw.csv
HTTP/1.1 412 Precondition Failed
date: Mon, 16 Apr 2018 20:50:04 GMT
content-length: 0
x-ambry-error-code: PreconditionFailed
content-type: text/plain; charset=UTF-8

// DELETE a blob with incorrect container name
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:CUrlTester" -H "x-ambry-target-container-name:container-b" -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app8938.prod.linkedin.com:15158/ambry/AAMAAgCAAAIAAQAAAAAAAAydAAAAJGFlNGEwMmEzLTAwNDYtNGQ1YS05ZmQ4LTE0YTJlNGM2ZWEwYw.csv
HTTP/1.1 412 Precondition Failed
date: Mon, 16 Apr 2018 20:50:52 GMT
content-length: 0
x-ambry-error-code: PreconditionFailed
content-type: text/plain; charset=UTF-8

// DELETE a blob with both correct account name and container name
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:CUrlTester" -H "x-ambry-target-container-name:container-a" -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app8938.prod.linkedin.com:15158/ambry/AAMAAgCAAAIAAQAAAAAAAAydAAAAJGFlNGEwMmEzLTAwNDYtNGQ1YS05ZmQ4LTE0YTJlNGM2ZWEwYw.csv
HTTP/1.1 202 Accepted
Date: Mon, 16 Apr 2018 20:51:14 GMT
Content-Length: 0

// PUT a blob again
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:CUrlTester" -H "x-ambry-target-container-name:container-a" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:yinzhang" -H "x-ambry-content-type:text/csv" -H "x-li-ambry-client:Internal" http://lva1-app8938.prod.linkedin.com:15158 --data-binary @test.csv
HTTP/1.1 201 Created
Location: /AAMAAgCAAAIAAQAAAAAAABFSAAAAJDllZGVjZWYzLTRkMTItNDFhMS05ZmNhLTBiNzk4ZWMzM2IzNQ.csv
Date: Mon, 16 Apr 2018 20:54:48 GMT
Content-Length: 0
x-ambry-creation-time: Mon, 16 Apr 2018 20:54:46 GMT
Access-Control-Expose-Headers: Location

//DELETE a blob with only container name specified
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-container-name:container-a" -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app8938.prod.linkedin.com:15158/ambry/AAMAAgCAAAIAAQAAAAAAABFSAAAAJDllZGVjZWYzLTRkMTItNDFhMS05ZmNhLTBiNzk4ZWMzM2IzNQ.csv
HTTP/1.1 400 Bad Request
date: Mon, 16 Apr 2018 20:56:57 GMT
content-length: 0
x-ambry-failure-reason: Only container name is set in request with no corresponding account name is not allowed.
x-ambry-error-code: BadRequest
content-type: text/plain; charset=UTF-8

// DELETE a blob with only correct account name
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:CUrlTester" -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app8938.prod.linkedin.com:15158/ambry/AAMAAgCAAAIAAQAAAAAAABFSAAAAJDllZGVjZWYzLTRkMTItNDFhMS05ZmNhLTBiNzk4ZWMzM2IzNQ.csv
HTTP/1.1 202 Accepted
Date: Mon, 16 Apr 2018 20:58:07 GMT
Content-Length: 0

// PUT the blob again
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-ambry-target-account-name:CUrlTester" -H "x-ambry-target-container-name:container-a" -H "x-ambry-service-id:CUrlUpload" -H "x-ambry-owner-id:yinzhang" -H "x-ambry-content-type:text/csv" -H "x-li-ambry-client:Internal" http://lva1-app8938.prod.linkedin.com:15158 --data-binary @test.csv
HTTP/1.1 201 Created
Location: /AAMAAgCAAAIAAQAAAAAAAAwgAAAAJDExMWNiNGE5LWM0ZWUtNDEwNy1iY2MwLThhY2VkNTlmYzIzNw.csv
Date: Mon, 16 Apr 2018 20:58:35 GMT
Content-Length: 0
x-ambry-creation-time: Mon, 16 Apr 2018 20:58:34 GMT
Access-Control-Expose-Headers: Location

// DELETE the blob with blobId only
[yinzhang@lva1-app8938 ~]$ curl -i -H "x-li-ambry-client:Internal" -X DELETE http://lva1-app8938.prod.linkedin.com:15158/ambry/AAMAAgCAAAIAAQAAAAAAAAwgAAAAJDExMWNiNGE5LWM0ZWUtNDEwNy1iY2MwLThhY2VkNTlmYzIzNw.csv
HTTP/1.1 202 Accepted
Date: Mon, 16 Apr 2018 20:59:51 GMT
Content-Length: 0

#----------------------------------------------------------------------------------------------------------------------------#
// restart server in perf
[yinzhang@lca1-eng-portal02 ~]$ lid-client control restart -f ei-ltx1 -t ambry-server-perf AmbryLI

// change the version of server in perf  (version 16.1.42)
[yinzhang@lca1-eng-portal02 ~]$ lid-client deploy AmbryLI -f ei-lca1 -t ambry-server-perf -v 16.1.42 --skip-hooks --host-concurrency 6

// cancel the deploy request 
lid-client request cancel  -f <FABRIC> --request-ids <Request ID> --message "Deployment stuck for Nuage"
#----------------------------------------------------------------------------------------------------------------------------#

Perf test for dynamic seal and unseal store:

keep the dumping the blob until the store is sealed

forcely wipe out: log in and delete and reboot the machine . ---> store should be unsealed
set the blob's TTL and wait for compaction to reclaim the space. (change the frequency of compaction)

AmbryLI_trunk/config/app/ambry-server-war/ei-lca1/     # change the threshold in config files on the perf machine
lid-client deploy --config AmbryLI -f ei-lca1 -t ambry-server-perf --skip-hooks --host-concurrency 6 # deploy the changed config
ZK endpoints in EI: zk-lca1-shared.stg.linkedin.com, zk-ltx1-shared.stg.linkedin.com  # check the state of store (whether in)

/export/content/lid/logs/ambry-frontend/i001 # vim ambry-frontend.log to check exception and errors

# wipe out the log segment on a single server
[yinzhang@ltx1-app1440 0]$ sudo -u app rm 0_0_log

[yinzhang@lca1-eng-portal03 ~]$ lid-client deploy --config AmbryLI -f prod-lsg1 -t ambry-server-main --exclude-hosts lsg1-app9847.prod.linkedin.com

#----------------------------------------------------------------------------------------------------------------------------#
# cd to config directory
[yinzhang-mn1:config yinzhang]$ svn st # 等同于 git status
[yinzhang-mn1:config yinzhang]$ svin review            # create a rb for review
[yinzhang-mn1:config yinzhang]$ svin review --update   # update the new changes to rb
[yinzhang-mn1:config yinzhang]$ svin commit            # when the rb is approved by at least one reviewer on ACL

#----------------------------------------------------------------------------------------------------------------------------#
// (1) 根据 blobId 查看 account and container 信息, using Casey's command
[yinzhang-mn1:~ yinzhang]$ curl 'http://cgetz-ld2:6789/ambry-account-admin/resources/blobIdMetadata/fg=ei&id=AAMAAQCfAAMAAQAAAAAAAAB4AAAAJDQwNDE3OGI0LWRjNzYtNDRlYi05ODMyLTliYjFjODYyZjE3ZQ.bin'
{"accountId":159,"accountName":"tscp-assets-war","containerName":"default-public-container","crafted":false,"containerId":3,"version":3}
// (2) use the account and container to determine prod on Nuage
// (3) click the "fast access" on Nuage for a particular account
// (4)then use the following cmd to query via Blob Id on a prod machine
[yinzhang@lva1-app23942 ~]$ curli -s --no-log --fabric prod-lor1 --dv-auth self -i -H "x-li-ambry-client:Internal" d2://ambry/AAMB_wC9AAkAAQAAAAAAAAUWAAAAJGRmYjQwMmU0LWIzNWMtNGQwMy1hZjk3LTU5YWJjODgzOGZkZA.pdf/BlobInfo
// if cannot find, we can go to go/reportal to query ambry event for specific blob id on Hadoop (a example is as follows)
    use tracking;
    select * from AmbryOperationEvent where datepartition >= '2015-04-01-00' and datepartition < '2015-04-03-00' and bloburn='AAEAAQAAAAAAAAJdAAAAJDcyYjg2ZTcyLTBmZWUtNGQ0ZC1hZTU1LTJmMzJjNzQxODc1OA';  
    *** you might need to remove suffix from BlobID to get bloburn ***
// if the blob id is crafted, we can go to go/pqr to retrieve the original blob id.
[Here is an example]:
SELECT ALT_ID_02, ID, ALT_ID_01 from ambry.AMBRY_ID_MAPPER_2 WHERE ALT_ID_01 in 
( 'AAMB_wC9AAkAAQAAAAAAAAMSAAAAJDNiZDFhZTdjLWYxYjYtNGYwMi1iMWE3LTdkYWViN2FkMWQ5Ng', 
  'AAMB_wC9AAkAAQAAAAAAAAM1AAAAJDY0Y2I0NDk1LTRjMWQtNDRhYi05ZGJkLTNhNjMzNmNlOGRjMQ', 
  'AAMB_wC9AAkAAQAAAAAAAAMdAAAAJDU2YzBkMmU5LTM1NDQtNDMwYi1iMjNkLTE5OTI1MTZkNDgwYw', 
  'AAMB_wC9AAkAAQAAAAAAAAVLAAAAJGM4M2U3Y2ZiLWFjYjMtNDk0MC1hNTU4LWFlZjRhYTI2ODEzNQ' )
  
#----------------------------------------------------------------------------------------------------------------------------#
部署jar包到某一台server上
./gradlew allJar
scp ambry-clustermap/build/libs/ambry-clustermap-0.1.0.jar ltx1-app1440.stg.linkedin.com:
[yinzhang@ltx1-app1440 ~]$ cd /export/content/lid/apps/ambry-server/i001/webapps/
[yinzhang@ltx1-app1440 webapps]$ cp ambry-server-war.war ~/
[yinzhang@ltx1-app1440 ~]$ /export/apps/jdk/JDK-1_8_0_121/bin/jar -xvf ambry-server-war.war 
[yinzhang@ltx1-app1440 ~]$ cp ambry-clustermap-0.1.0.jar WEB-INF/lib/ambry-clustermap-0.2.180.jar 
[yinzhang@ltx1-app1440 ~]$ /export/apps/jdk/JDK-1_8_0_121/bin/jar -cvf ambry-server-war.war META-INF WEB-INF
[yinzhang@ltx1-app1440 ~]$ cd /export/content/lid/apps/ambry-server/i001/webapps
[yinzhang@ltx1-app1440 webapps]$ cp ~/ambry-server-war.war /tmp/
[yinzhang@ltx1-app1440 webapps]$ sudo -u app cp /tmp/ambry-server-war.war ./ambry-server-war.war 
[yinzhang@ltx1-app1440 webapps]$ cd ../bin/
[yinzhang@ltx1-app1440 bin]$ ./container-jettyctl.sh stop
[yinzhang@ltx1-app1440 bin]$ sudo -u app ./container-jettyctl.sh start
[yinzhang@ltx1-app1440 bin]$ cd ../logs
[yinzhang@ltx1-app1440 logs]$ tail -f ambry-server.log

#----------------------------------------------------------------------------------------------------------------------------#
# List application slices matching the ambryLi
[yinzhang@lca1-eng-portal02 ~]$ topology-v3 slice list --product ambryLi                           
App Name        Instance    Created By                Created At           Product Tag           Config Tags    ID                                    State
--------------  ----------  ------------------------  -------------------  --------------------  -------------  ------------------------------------  -------
ambry-server    i001        urn:li:corpuser:dnikifor  2016-07-27 21:43:54  ambry-server-main                    f76d7ea9-64ca-4eee-9a7b-1d98bfe18d48  ACTIVE
ambry-server    i001        urn:li:corpuser:dnikifor  2016-07-27 21:44:21  ambry-server-perf                    3bb7f4c4-d29e-4c85-ba4e-0a1aa0a382f8  ACTIVE
ambry-frontend  i001        urn:li:corpuser:dnikifor  2016-07-27 22:32:24  ambry-frontend-perf                  494f76c0-6574-416d-8fb2-3dbd4ff6a35e  ACTIVE
ambry-frontend  i001        urn:li:corpuser:dnikifor  2016-07-27 22:32:46  ambry-frontend-main                  8cd2b15d-22eb-413f-8716-a2c1e282d54a  ACTIVE
ambry-server    i001        urn:li:corpuser:dnikifor  2016-08-05 23:42:30  ambry-server-reserve                 ab5e3baf-a709-4297-8827-9e1fdd4b13a2  ACTIVE

#--------------------------------------------- HOW TO CHECK TRACE INFO IN LOG ------------------------------------------------------------------------------#
(1) [yinzhang-mn1:~ yinzhang]$ ssh -L 15151:localhost:15151 ltx1-app1440.stg.linkedin.com   # run this command with correct host and port
(2) go to http://localhost:15151/ambry-server/jmx/serverbydomain  # replace serverdomain with frontendbydomain if necessary
(3) click on "ambry-server.log4j:name=admin"
(4) Name of the logger: 填写class的名字 比如： com.github.ambry.store.CompactAllPolicyFactory
(5) new level: 填写log lever的名字 比如 TRACE

 // Also we can use the script from Casey to set log level
./set-log-level.sh lor1-app0179.prod ambry-frontend com.linkedin.ambry.frontend.AccessFilter INFO
(source code of set-log-level.sh is stored at https://gitli.corp.linkedin.com/cgetz-scratch/cgetz-scripts/source/set-log-level.sh)
#----------------------------------------------------------------------------------------------------------------------------#
 ./gradlew build && ./gradlew idea  # update lib import in idea
 ./gradlew assemble                 # only compile not run unit tests
 ./gradlew build && ./gradlew test  # run both unit tests and integration tests
 
#---------------------------------------- How to Connect ZookInspector to Prod ZK -------------------------------------------#
// we should tunnel to a prod zookeeper  (这里 lva1-app23942 是任意一台可以access的frontend), following cmd is to run in foreground      
[yinzhang-mn1:~ yinzhang]$ ssh -M -S zk-lva1-shared-ctrl-socket -L 12913:zk-lva1-shared.prod.linkedin.com:12913 lva1-app23942.prod.linkedin.com

#---------------------------------------- Check Nuage Request and Approve/Reject --------------------------------------------#
(1) open the developer tools in chrome (more tools -> developer tools)
(2) refresh the webpage to trigger nuage workflow in developer tool
(3) go to "nuageWorkFlows" in developer tool and find the "container"  (find "databaseSpec" first)
(4) check cached is true or false (true means it is cached by CDN and is sort of public)
(5) check the description if it is public or not.  (if the content is not public but user chooses the cached, we need to double check with the user)
(6) also check the blob size and write QPS making sure they are normal value.

#------------------------------------------------ Manage ACL for app ---------------------------------------------------------------#
# check ACL for particular Account/Container on Nuage
Approach 1:  manage ACL on Nuage
Approach 2:  manage ACL using acl-tool
use following command to edit acl rules:
    acl-tool edit --fabric corp-lva1 'urn:li:ambryAcl:(Ambry-corp,ContainerBlobs,1030_8)'


#------------------------------------------------ Upload/Download URL ---------------------------------------------------------------#
upload might need signed url; # l1proxy-ats should be included in ACL rules when trying to use cdn url (make sure the content is public first)
download doesn't need signed url; 

#---------------------------------------- Add/Change the dependency in gradle --------------------------------------------#
# This is used to import external libraries/pacakges. 
1. Make changes in build.gradle
2. an example is as follows:
    project(':ambry-api') {
    dependencies {
        compile project(':ambry-utils')
        compile "com.codahale.metrics:metrics-core:$metricsVersion"
        compile "org.codehaus.jackson:jackson-core-asl:$jacksonVersion"          # new added dependency
        compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"        # new added dependency
        testCompile project(':ambry-utils').sourceSets.test.output
    }
   }
   
#---------------------------------------- Test Stop/Start BlobStore in Perf (use local machine) --------------------------------------------#
1. modify 3 files to keep only one partition we are interested in PartitionLayout (change datacenter name, hardware layout)
       config/HardwareLayout.json
       config/PartitionLayout.json
       config/frontend.properties
2. deploy frontend only by using commend on wiki of ambry github:
  [yinzhang-mn1:target yinzhang]$ nohup java -Dlog4j.configuration=file:../config/log4j.properties -cp "*" com.github.ambry.frontend.AmbryFrontendMain --serverPropsFilePath ../config/frontend.properties --hardwareLayoutFilePath ../config/HardwareLayout.json --partitionLayoutFilePath ../config/PartitionLayout.json > logs/frontend.log &
3. PUT a blobstore using curl command
  [yinzhang-mn1:target yinzhang]$ curl url -i -H "x-ambry-service-id : CUrlUpload" -H "x-ambry-content-type : text/csv" -H "x-ambry-um-description : Demonstration Text" http://localhost:1174/ --data-binary @test.csv
4. Stop the blobstore by ServerAdminTool.java (参考 ServerAdminToolConfig 文件)
5. Restart the blobstore by ServerAdminTool.java 
6. Kill the process of frontend once the testing is done:
   [yinzhang-mn1:target yinzhang]$ kill -15 3962(PID)

#----------------------------------- Test Stop/Start BlobStore in Prod (need to ssh prod machine!!!!!!) --------------------------------------------#
1. on local machine ./gradlew allJar
2. copy ambry.jar, log4j.properties to prod machine
[yinzhang-mn1:ambry yinzhang]$ scp target/ambry.jar config/log4j.properties lsg1-app9856.prod.linkedin.com:
3. copy ServerAdminTooConfig to prod machine
[yinzhang-mn1:ambry yinzhang]$ scp ~/ServerAdminToolConfig lsg1-app9856.prod.linkedin.com:
4. edit ServerAdminTooConfig as follows (modify if necessary)
5. run the command:
[yinzhang@lsg1-app9856 ~]$ /export/apps/jdk/JDK-1_8_0_121/bin/java -Dlog4j.configuration=file:log4j.properties -cp ambry.jar com.github.ambry.tools.admin.ServerAdminTool --propsFile ServerAdminToolConfig

################################## ServerAdminTooConfig (on prod machine) #########################################
type.of.operation=BlobStoreControl                                                                                #
hardware.layout.file.path=/export/content/lid/data/ambry-clustermap/ambry-clustermap/HardwareLayoutProd.json      #
partition.layout.file.path=/export/content/lid/data/ambry-clustermap/ambry-clustermap/PartitionLayoutProd.json    #
hostname=lsg1-app9856.prod.linkedin.com                                                                           #
port=15088                                                                                                        #
partition.ids=2448                                                                                                #
enable.state=true                                                                                                 #
num.replicas.caught.up.per.partition=1                                                                            #
clustermap.datacenter.name=prod-lsg1                                                                              #
clustermap.host.name=lsg1-app9856.prod.linkedin.com                                                               #
clustermap.cluster.name=ambry-prod                                                                                #
###################################################################################################################

#---------------------------- How to create a new cluster and register participant to new cluster ---------------------------#
1. Create new cluster:
   use HelixBootstrapUpgradeTool.  Here is a example of creating a new example with different perfix name: (Run configuration)
   --hardwareLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/HardwareLayoutPerf.json --partitionLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/PartitionLayoutPerf.json --zkLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/zkLayoutPerf.json --clusterNamePrefix AmbryTestStopped- --clusterName Perf
   
2. Register one server to the new cluster 
   recommend to read AmbryLIServer.java code and change the clusterName in server's config file. (see following example)
   <property name="ambry.clusterName" value="Perf" />

3. Drop the custom cluster:
   use --DropCluster option in HelixBootstrapUpgradeTool to delete the cluster created by us. Following is the example:
   --dropCluster --clusterName AmbryTestStopped-Perf --zkLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/zkLayoutPerf.json

4. Validate the existing cluster:
   --validateOnly --hardwareLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/HardwareLayoutPerf.json --partitionLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/PartitionLayoutPerf.json --zkLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/zkLayoutPerf.json --clusterNamePrefix Ambry-

5. Upload cluster configs to PROPERTYSTORE
   --uploadConfig --hardwareLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/HardwareLayoutPerf.json --partitionLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/PartitionLayoutPerf.json --zkLayoutPath /Users/yinzhang/Documents/ambryli_trunk/ambry-clustermapresource/resources/zkLayoutPerf.json --clusterNamePrefix Ambry-

#----------------------------- How to disbale some graphs on ingraphs -----------------------------------------#
1. on local machine use following command to checkout yaml file.
[yinzhang-mn1:dashboards yinzhang]$ ingraphs dashboards checkout ambry-dynamic-clustermanager-dashboard
Make the current working directory an ingraphs-api checkout? [y/N]: y
2. edit the file and comment the graphs related to Static Cluster
[yinzhang-mn1:dashboards yinzhang]$ vim ambry-dynamic-clustermanager-dashboard
3. after modification is done, commit the changes
[yinzhang-mn1:dashboards yinzhang]$ ingraphs dashboards commit ambry-dynamic-clustermanager-dashboard 

#----------------------------- Trigger Stats Aggregation in Prod -----------------------------------------#
1. ./gradlew allJar
2. go to /Users/yinzhang/Documents/ambry/target, copy ambry.jar to one prod machine
3. copy zkLayoutPROD.json to prod machine
3. log into one machine and run following command:
[yinzhang@lsg1-app14841 ~]$ /export/apps/jdk/JDK-1_8_0_121/bin/java -cp ambry.jar com.github.ambry.clustermap.HelixClusterWideAggregationTool --zkLayoutPath zkLayoutPROD.json --clusterName Ambry-prod --workflowName triggerRecurrent --recurrentIntervalInMinutes 1440

#----------------------------- Read Stats Aggregation report in a pretty way -----------------------------------------#
1. copy the String in json report from go/reflection or ZKInspector
2. In shell "echo string | jq .", then we can get the report in a nice view.
   following is an example (pay attention to the backslash '\'):
[yinzhang-mn1:~ yinzhang]$ echo "{\"a\" : 1}" | jq .
{
  "a": 1
}

#--------- set up periodic task on server machine ----------------#
Stats report script for EI/Perf is running on lca1-app0680.stg.linkedin.com
Fetch report from each node and aggregate stats script is running on lsg1-app14841.prod.linkedin.com 

sudo -u app crontab -e
install kazoo: pip install --user kazoo-2.5.0-py2.py3-none-any.whl
install kazoo:  /export/apps/python/3.6/bin/pip3 install --user kazoo

# run report script background and ignore the output
nohup /scheduledTask.sh > /dev/null 2>&1 &
