/****************************************** Concepts **********************************************/
Frontends:  receive and route request
Datanodes:  store the actual data. Each datanode manages a number of disks
Cluster Managers: maintain the states of cluster including partition state, partition location, disk placement etc.

Datacenter = Frontends + Datanodes + Cluster Managers (Zookeeper to coordinate)

blob: large immutable data / large media objects

proxy request: forward requests to other data centers when data is not replicated in current datacenter.

partition: a logical group of blobs, current size is 100GB (at first ready-write then it becomes read-only)

CDN = Content Delivery Network

Router Library:  choose a partition, communicate with Datanode in charge and serve the request.


/****************************************** Data Structure **********************************************/
(1)PUT/DELETE entry: header
                     blob id = parition id(8 bytes) + UUID(32 bytes)
                     blob size
                     TTL = time to live
                     creation time
                     content type
                     delete flag

(2)Datanode:     indexing of blobs
                 journals
                 bloom filters (reduce lookup latency for on-disk index segments)


(3)Indexing of blobs:  Index segment1, Index segment2, Index segment3 ... 
                       each segment:  <blob id, start offset> pairs + in-memory bloom filter
                      
(4)Chunking blob: (Ambry split large blob into smaller equal-size chunks with size 4~8MB. The chunks are placed on different paritions)
                  blob metadata = # of chunks + (ChunkId1 + paritionId1 + UUID1) + (ChunkId2 + paritionId2 + UUID2) + ...
                  (blob metadata is viewed as a normal blob and is put into Ambry)
                  use sliding buffer of size s to retrieve the blob

(5)Journal:  each partition replica has a journal. A in-memory cache of recent blobs ordered by offset
             partition p replica r1 journal = offset + blob id (track the latest Offset)
 
