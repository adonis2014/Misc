1. git checkout -b branchName
   git rebase master
   git rebase -i master~1        # 最后一次
   git rebase -i master~5        # 最后五次
   git commit -a —amend          # 修改前一次的提交，保持原有的commit id
   git cherry pick
   git reset —-hard commit id
   git diff HEAD^ > nioc-host.diff
   git apply nioc-host.diff
   git config
   
2. git remote add upstream git@github.com:linkedin/ambry.git   # set up upstream to be ambry project on github
   git fetch upstream                                          # Fetch all updates from upstream to this repo
   git merge upstream/master                                   # Merge the changes from upstream/master into your local master branch
   git rebase upstream/master                                  # rebase any changes on top of the change in upstream
   git commit -a -m "msg"                       # commit changes: one line short description and multiline explanation of description
   git rebase -i 49687a0a646954afdf3f4dae1f914ea793341ea2(commit id) # 进入交互式
        pick 033beb4 this is first commit
        pick d426a8a this is second commit
   修改为
        pick 033beb4 this is first commit
        squash d426a8a this is second commit   (这样就把第二条commit merge到第一条commit中去了)
                                              （squash的作用就是把当前commit向前合并，一直合并到pick为止。）
   最后重写commit的description
   
3. git checkout -- filename      # to discard changes in working directory
   git branch -d branch_name     # delete branch
