1. tail -f sys.log | grep niocVim
2. ps -C (name)
   ps -ax
3. sudo mount -r -t nfs pa-dbc1122:/dbc/pa-dbc1122/yingyiz/ /mnt/test
4. top                                                   #check men and cpu utilization rate
5. fallocate -l 1G 1gFile.img                            #create 1GB file
9. setup NFS server
10. use NetHogs to monitor bandwidth usage
11. vim operation / sudo apt-get install vim
12. sudo apt-get install openssh-server
13. ls -lh                                              # check file and size
14. df -h  # check disk space
15. ls -lrt  # -l means long format; -r means reverse order; -t means sort by time
16. curl is used to transfer data to/from server

    curl http://example.com                      # use GET as defaul request method
    curl -d/-F http://example.com                # use POST as request method
    curl -T http://example.com                   # use PUT as request method
    
    # If for whatever reason you're not happy with these default choices that curl does for you, 
    # you can override those request methods by specifying -X [WHATEVER]. 
    # This way you can for example send a DELETE by doing curl -X DELETE [URL].
    curl -X  DELETE http://example.com/file.txt   # Specifies a custom request method to use when communicating with the HTTP server.
    
    curl -i  # All HTTP replies contain a set of response headers that are normally hidden, 
             # use curl's --include (-i) option to display them as well as the rest of the document
    
    curl -I  # (HTTP FTP FILE) Fetch the headers only! When used on an FTP or FILE file, curl displays the file size and last modification time only.
    
    curl -H  # extra header to include in the request when sending HTTP to server
             example:     curl -H "X-First-Name: Joe" http://example.com/
17. 按行拆分一个文件:
    split -l 200 file.csv      # 以每200行拆分csv文件 (可能以x打头)
    for i in x*; do mv "$i" "$i.csv"; done    # 将拆分后的若干x开头的文件重命名为.csv结尾
18. option 键 + 左向建 可以按单词跳跃，特别适合terminal中长指令中的快速移动
19. tcpdump    # tcpdump is premier network analysis tool for information security professionals
    tcpdump -i any   # Listen on all interfaces just to see if you’re seeing any traffic.
    tcpdump -i eth0  # Listen on the eth0 interface.
    tcpdump -D       # Show the list of available interfaces
    
20. /usr/libexec/java_home  -V                                      # check Java home for all the versions
21. which -a python python2 python2.7 python3 python3.3 python3.5   # check all versions of installed python
/****************************************** File Permission and Directory *************************************************/
1. ls -al 列出所有文件名和相关属性
    drwxr-xr-x  10   zhangyingyi   staff    340   1 15 19:17    Coding
    [权限]     [连接]  [所有者]     [用户组]  [大小]   [修改时间]    [文件名]
    
    【权限】: 第一个字符：
                  [d] 表示目录
                  [-] 表示文件
                  [l] 链接文件 linkfile
             其他字符： r = read = 4; w = write = 2; x = execute = 1
    【连接】: 表示多少个文件名连接到同一个inode上。 文件的权限和属性记录到file system的inode上。

2. chgrp （change group 改变文件所属用户组）
   chown （change owner 改变文件所有者）
   chmod （change mode 改变文件的权限）
   系统所有账号记录在 /etc/passwd 中；个人密码都记录在 /etc/shadow下； 所有的用户组名都记录在 /etc/group中
   i.e.    chgrp [-R] group_name  filename/dir_name
           chown [-R] owner_name  filename/dir_name
           chmod [-R] 777 filename

3. 目录的权限
        r:  具有读目录列表的权限，可执行 ls dir
        w:  可新建文件/目录, 删除文件/目录, 重命名, 移动文件
        x:  可进入目录，使之成为work directory。也就是可以执行 cd dir

4. linux 文件种类 与 扩展名 
          [b] 是block device，存储设备，可以随机在disk的不同block上写
          [c] 是character device, 串行端口的接口设备, 如键盘，鼠标
          [s] 是sockets, 网络数据连接
          [p] 是pipe， 管道文件， FIFO
   扩展名：
          .sh   脚本或批处理文件，因为是shell写的，所以称为sh
          .tar  压缩文件

5. 目录树：
        / (root): 开机系统相关
        /usr (UNIX Software Resource): 软件安装/执行有关
        /var (variable):  与系统运作过程有关
   
   / 根目录下的常见子目录：      
        /bin:   存放常用命令的执行文件 比如：cat, chmod, chown, mv, cp等
        /boot:  存放开机会使用的文件
        /dev:   设备或接口设备以文件的形式存于此
        /etc:   系统主要的配置文件，例如：账户密码文件，各种服务的起始文件, 特别是 /etc/init.d 可以执行类似/etc/init.d/iptables start命令
        /home:  用户主文件夹
        /lib:   开机时会用到的库函数
        /sbin:  (system binary) 存放开机需要的系统执行文件
        /tmp:   暂时存放文件的地方
        
   /usr 目录下常见的子目录 （/usr 会占用最多的硬盘容量）
        /usr/bin:   存放绝大部分用户可使用的命令
        /usr/local: 安装自己下载的软件
        /usr/src:   放置源码
        /usr/sbin:  非系统正常运行所需的系统命令，比如网络服务器软件的服务命令(daemon)
   
   /var 目录下常见子目录 (/var是系统运行后，逐渐占用磁盘容量的目录，主要放置 caching，log文件)
        /var/cache: 存放运行程序的暂存文件
        /var/log: 存放登录文件
        /var/run: 存放运行程序或进程的PID
        /var/lib: 存放程序本身运行所需的数据文件    
        
/****************************************** File and Directory Management *************************************************/
1. cd - 回到刚才目录
   cd ~ 回到自己home directory
2. mkdir -m 777 dir1   配置文件的权限，直接设置
   mkdir -p dir1/dir2/dir3  直接递归创建多级目录
3. 环境变量PATH
     当执行一个命令，比如“ls”。系统会按照PATH定义的目录下查询文件名为ls的可执行文件。如果PATH定义的目录中含有多个文件名为ls的可执行文件，执行最先查到的那个
     echo $PATH 查看PATH下定义的目录
     <1> 不同身份用户默认的PATH不同，默认能够随意执行的命令也不同
     <2> PATH是可以修改的，一般用户可以通过修改PATH来执行某些位于/sbin 或 /usr/sbin下的命令
     <3> 使用绝对路径或相对路径直接执行某个命令的文件，比查询PATH来得正确
4. ls -a 列出全部文件，包括隐藏文件
   ls -d 仅列出目录本身，而不是列出目录内的文件数据
   ls -l 列出文件的权限，属性，大小，日期等信息
5. cp -p src dst 连同源文件属性一起复制过去
   cp -d src dst 若src是link file，复制文件属性而非文件本身
   cp -r src dst 递归复制，用于复制目录
   cp -a src dst 相当于 cp -pdr src dst
   cp -i src dst 若目标文件已存在，覆盖前会先询问
6. rm -i file 删除前先询问
   rm -f file 强制删除
   rm -r file 递归删除
7. mv -u src dst 若目标文件存在，且src较新，才会更新
   mv file fileNew 更改文件名
8. basename 取得路径中的文件名   basename /etc/sysconfig/network 返回network
   dirname 取得路径中的目录名    dirname /etc/sysconfig/network 返回/etc/sysconfig
9. cat (concatenate) 由第一行开始显示文件内容
   cat -n file   打印出行号，连同空白行也有行号
   cat -A file   打印出所有字符，包括各种特殊字符
   tac (cat 倒过来) 从最后一行到第一行反向显示
10. more (一页一页向后翻页)
    例如 more /etc/man.config
    space: 代表向下翻一页
    enter: 代表向下滚动一行
    q:     离开more
    /字符串: 向下查找关键字"字符串"
    
11. less (可向前向后翻页)
    例如 less /etc/man.config
    space: 代表向下翻页
    PageUp: 代表向上翻页
    /字符串: 向下查找关键字"字符串"
    q:      离开less这个程序
12. head -n file 显示前n行
    tail -n file 显示后n行
    tail -f file 持续检测这个file是否尾部有增加内容。ctrl-c才能结束
13. 文件时间
    mtime = modification time 文件内容最后更改时间
    ctime = status time       文件权限和属性最后更改时间
    atime = access time       文件最后被访问的时间
    
    ls -l --time=atime filename  查询filename文件最后被访问的时间
    ls -l --time=ctime filename  查询filename文件最后属性、权限被修改的时间
    
    touch filename                  创建一个空文件filename
    touch -t 1801241805 filename  修改文件filename的mtime和atime为2018-1-24 18:05 时间格式为[YYMMDDhhmm]

14. umask 文件默认权限
    0022 与一般权限有关的是后面三个数字，代表默认值需要减掉的权限 （第一个是特殊权限）
    默认情况下：  新建文件的权限为666 即-rw-rw-rw-， 没有执行权限
                新建目录的权限为777 即drwxrwxrwx， 开放所有权限
                
15. 文件隐藏属性    
    chattr = change attribute 更改设置文件的隐藏属性，该命令只能在Ext2/Ext3的文件系统上使用
    命令格式： chattr [+-=] [options] file/dir 其中 + 表示增加属性；- 表示删除属性；= 表示直接设置属性
    chattr +a file    设置后，file只能append数据，不能删除和修改数据
    chattr +i file    设置后，file变成immutable，不能删除、改名、设置连接，不能写入和添加数据。对于系统安全性有很大帮助, 只有root才能设置
    lsattr -a file/dir 显示所有文件(包括隐藏文件)的隐藏属性

16. 特殊文件权限
    SUID = Set UID  例如 -rws--x--x
            <1> SUID仅对二进制程序(binary program)有效，不能用在shell script上，对目录也无效。
            <2> 用户对程序要有x的可执行权限
            <3> SUID仅在执行改程序的过程中(run-time)有效
            <4> 用户将有用文件owner的权限
    SGID = Set GID   例如 -rwx--s--x 
            <1> SGID 可以用于文件或目录
            <2> 用户若对目录具有r和x的权限，该用户能够进入此目录
            <3> 用户在此目录下的effective group 会变成该目录的用户组
            <4> 若用户具有w权限，则新建文件的用户组与目录用户组相同
    SBIT = Sticky Bit 例如 drwxrwxrwt
            <1> 只针对目录有效
            <2> 如果目录加上了SBIT权限时，用户组成员只能对自己创建的文件/目录进行删除，重命名，移动，无法删除他人的文件
    SUID = 4
    SGID = 2
    SBIT = 1
    chmod 4755 filename 相当于 -rwsr-xr-x  第一个数字是特殊权限

17. which (寻找执行文件)
    which -a ifconfig 列出PATH中可以找到的ifconfig命令

18. whereis ifconfig 利用数据库查找ifconfig文件，比find要快
    locate -i keyword 利用数据库，忽略大小写，查找keyword文件，可以输入“文件的部分名称”

19. find [PATH] [options] [action]
    find /etc -mtime n  查找/etc文件下n天之前的"一天之内"被更改的文件
    find /etc -mtime +n 查找n天之前（不含n天本身）被更改过的文件
    find /etc -mtime -n 查找n天之内（含n天本身）被更改的文件
    find /etc -newer file 查找比file还要新的文件
    
    find /home -user zyy  查找home下属于zyy用户的文件
    find /home -nouser    查找不属于任何人的文件
    
    find / -name passwd   查找文件名为“passwd”的文件，支持通配符
    find / -type s        查找根目录下Socket类型的文件
    find / -perm +7000    查找文件属性含有SUID或SGID或SBIT的文件
    find / -perm -0744    查找文件权限全部包含0744的文件，例如 4755也满足，因为全部包含了0744

/****************************************** Linux Disk and File System *************************************************/
Disk = # of Cylinders, Cylinder = # of Sectors (Cylinder是partition的最小单位，Sector是物理存储最小单位， 512bytes)
第1个Sector最重要，其中内容：MBR(446bytes) + partition table(64bytes)
<1> primary分区 + extended分区最多不超过4个（硬盘限制）
<2> extended分区最多1个（操作系统限制）
<3> extended分区还可以再分出logical分区
<4> primary 和 logical分区可以格式化，extended分区不可以格式化

1. inode: 记录文件的权限、属性和数据所在block的号码，一个文件占用一个inode
   block: 存放文件的实际内容。内容过多可以占用多个block
   superblock: 记录文件系统整体信息：inode/block的总量，使用量，剩余量，文件系统格式等信息

2. 文件系统的最前面是boot sector, 后面跟着多个block group
   每个 block group = superblock + FS description + block bitmap + inode bitmap + inode table + data block
   <1> superblock: block和inode的总量, 已使用/未使用的inode/block数量, block和inode的大小(block为1K,2K,4K，inode为128 bytes)
                   FS挂载时间, 最近一次写入时间，最近一次检验磁盘时间
                   validbit 若此文件系统已挂载 则validbit=0；若未挂载 则validbit=1
   <2> FS description: 文件系统说明。记录该block group开始和技术的block号码，以及每个区段(superblock, bitmap, inodemap, datablock)位于哪个block号码之间  kc
   <3> block bitmap:  记录使用和未使用的block号码， 即哪些block是空的，帮助系统快速找到可用空间存放新文件
   <4> inode bitmap:  记录使用和未使用的inode号码
   <5> inode table:   存放所有inode的地方。
                      inode包含 文件权限、属性；文件大小；mtime, ctime, atime；文件flag(如SetUID)；block号码
                      inode记录block号码分为 12个直接，1个间接，1个双间接，1个三间接
   <6> data block:    存放所有的block的地方
                      block 大小 1KB, 2KB, 4KB三种
                      每个block最多只能放置一个文件的数据 (如果文件小于block，则该block剩余空间只能浪费)

3. dumpe2fs [-h] devicefile 列出文件系统每个区段和superblock的信息(-h会只列出superblock的信息)

4. 目录的block记录 <1> 这个目录下的文件名，<2> 文件名对应的inode号码
   文件的block就记录文件的实际内容
   被编辑过的文件在内存中设置为Dirty，可以手动用sync强迫内存中的Dirty文件写入磁盘。正常关机时，关机命令也会调用sync命令将内存数据写入磁盘

5. mount point
    将文件系统与目录树结合的操作称为挂载(mount)，挂载点一定是目录，该目录是进入该文件系统的入口
    Linux支持的文件系统: <1>传统文件系统: ext2, FAT
                       <2>日志文件系统: ext3, XFS, ReiserFS
                       <3>网络文件系统: NFS
    Linux系统通过一个名为Virtual Filesystem Switch(VFS 虚拟文件系统)的内核功能来管理所有的文件系统。

6. df 列出文件系统磁盘使用量
        df -a 列出所有系统 包括系统特有的 /proc文件系统
        df -h 以人们容易阅读的GB,MB等形式显示
        df -T 显示磁盘分区的文件系统名称 （例如 ext2）
        df -i 不用硬盘容量，以inode的数量来显示
        
   du 列出目录所占容量
        du -s 仅列出当前目录的总量
        du -a 列出所有文件、目录的容量
        du -h 以人们易读的方式列出容量格式（GB/MB）

7. hard link 和 symbolic link
   <1> hard link: 只是在某个目录下新建一条文件名链接到某inode号码的关联记录
            pros: 安全，一个个文件名删除，可以从另一个文件访问; 从任何一个文件改动，都会更新实际的文件
            cons: 不能跨文件系统， 不能连接到目录
   <2> symbolic link: 创建一个独立的文件，而这个文件会让数据的读取指向它连接的那个文件的文件名

   ln src target      建立hard link，src是原有文件，target是连接文件
   ln -s src target   建立symbolic link，src是原有文件，target是连接文件

8. fdisk 磁盘分区
   fdisk /dev/hdc 开始磁盘分区，这里hdc是设备名称，没有跟数字！！！
   fdisk -l       显示当前所有设备的所有分区
   注意： <1> fdisk只要root可以执行, <2> 使用设备名称(如/dev/hdc不要加上数字，因为分区是针对整个硬盘设备)
9. mkfs 磁盘格式化
   mkfs -t 文件系统格式 设备名称
   mkfs -t ext3 /dev/hdc6
   mke2fs [-b block大小] [-i inode大小] [-L 卷标] [-c检查，-j 日志]
10. fsck 磁盘校验
    fsck [-t 文件系统类型] -aC 自动修复有问题的扇区，显示校验进度
11. mount的注意事项：
    <1> 单一文件不应该被重复挂载在不同的挂载点（目录）中；
    <2> 单一目录不应该重复挂载多个文件系统；
    <3> 作为挂载点的目录应该是空目录
    mount -a        依照配置文件/etc/fstab将所有未挂载的磁盘都挂载上来
    mount -l        查看目前已挂载的文件系统
    mount [-t 文件系统] 设备文件名 挂载点      实际挂载情况会写入/etc/mtab              
12. umount [-f] 设备文件名或挂载点      将设备文件[强制]卸载

13. 开机挂载/etc/fstab及/etc/mtab
    系统挂载的限制:<1> 根目录/ 必须挂载，且一定要先于其他mount point挂载进来；
                 <2> 其他挂载点必须是已经新建的目录；
                 <3> 所有挂载点在同一时间内只能挂载一次；
                 <4> 所有分区在同一时间内只能挂载一次；
                 <5> 若要卸载，必须先将工作目录移除挂载点；
    fstab = device + mount point + FS type + parameters + dump + fsck
    其中 dump 表示能否被dump命令作用：0表示不要做dump备份；1表示每天进行dump操作；
        fsck 表示对该文件系统是否以fsck来检查扇区：0不要检验; 1表示最早检验(根目录); 2表示稍后检验
        
   mount -o loop /root/centos.iso /mnt/centos_dvd 特殊设备loop挂载（镜像文件不刻录就挂载使用）

14. 内存交换空间 swap （swap 是指使用硬盘暂时放置内存中的信息）
    mkswap 设备文件名 能够格式化分区为swap格式
    swapon 设备文件名 启动swap设备
    free 查看内存的使用情况
    swap -s 列出目前使用swap的设备
    
15. superblock = 1KB, bootsector = 1KB, block size = 1KB/2KB/4KB
    bootsector 的地址总是在最前面，先于superblock；两者可能分居两个block，也可能在同一个block中
    
16. parted 命令可以支持大于2TB的磁盘分区（fdisk不能）
    parted /dev/hdc mkpart [分区类型primary/extended/logical] [文件系统类型ext3等] 开始柱面 结束柱面(容量作单位)

/****************************************** Package up/ Zip up Files *************************************************/
1. 常见打包压缩文件后缀名：
    .gz 用gzip程序压缩的文件；.bz2 用bzip2压缩的文件； .tar 用tar打包的数据，没有压缩； 
    .tar.gz 用tar打包并且gzip压缩的文件； .tar.bz2 用tar打包并且用bzip2压缩的文件
2. gzip -v filename    压缩文件，显示压缩比
   gzip -d zipfile.gz  解压缩文件
   zcat zipfile.gz     显示被压缩的文本文件
3. bzip2 -vk filename   用bzip2压缩文件[-v显示，-k保留原文件]
   bzcat zipfile.bz2    不解压的情形下，显示文件
   bzip2 -d zipfile.bz2 解压缩文件
4. tar可以将多个目录或文件打包成一个大文件
    压缩： tar -zcvf [filename.tar.gz]  [filename]   其中-c 新建打包文件，-v 显示过程，-f接打包后文件名
          tar -jcvf [filename.tar.bz2] [filename]       -z 用gzip压缩， -j用bzip2压缩
    查询： tar -ztvf filename.tar.gz                查看压缩后文件内容
          tar -jtvf filename.tar.bz2
    解压缩：tar -zxvf filename.tar.gz  [-C 欲解压缩的目录]
           tar -jxvf filename.tar.bz2       -x 解压缩
    例子： tar -jcvf filename.tar.bz2 --exclude=/root/etc* /root  把/root下非 etc*开头的文件打包
5. 备份工具 dump
   dump适合对文件系统备份，可以制定等级。 第1次备份时使用的是level0, 这个等级也是完整的备份；第2次备份时，文件系统内的数据已经和level0不一样了，而
   level1仅比较目前文件系统与level 0 之间的差异，备份有变化的文件； level2 则是与level1比较。
   
   dump -W 列出/etc/fstab 中具有dump设置的分区是否备份过
   dump [-Suvj] [-level] [-f 备份文件]  待备份的文件系统
   dump -u -0 -f /boot.dump   /boot   将boot挂载的文件系统完整备份为boot.dump -u表示将这次dump的时间记录到/etc/dumpdateS中
   dump -S /dev/hdc1    -S表示列出待备份文件系统需要多大的空间

6. 恢复文件 restore
   restore -t [-f dumpfile] [-h] 查看dump备份文件中含有什么重要数据
   restore -C [-f dumpfile] [-D 挂载点] 将dump文件里的数据与实际文件系统比较，列出在dump文件中与目前文件系统中不一样的文件
   restore -i [-f dumpfile]    进入互动模式，可以仅还原部分文件（用于dump目录时的还原）
   restore -r [-f dumpfile]    还原整个文件系统
7. 制作和备份文件命令 dd
   dd 可以读取磁盘设备内容（几乎直接读取扇区），然后将整个设备备份成一个文件
   
   dd if="input file" of="output file" bs="block size" count="number" 其中bs是指定一个block的大小(默认512bytes)，count表示多少个bs
   tar可以用来备份关键数据，而dd可以用来备份或复制整块分区/磁盘。
   
8. 可以备份任何东西的cpio
   cpio要配合类似find等可以找到文件名的命令，来备份。涉及数据流重定向。
   cpio -ovcB > [file/device] 备份      -o表示将数据copy输出到文件或设备上
   cpio -ivcdu < [file/device] 还原     -i表示将文件复制到系统中  -u自动将新文件覆盖旧文件
   cpio -ivct < [file/device] 查看      -t用来查看cpio新建文件或设备的内容
   例如 find /boot | cpio -ocvB > /tmp/boot.cpio
        cpio -idvc < /tmp/boot.cpio
9. ~/.viminfo  是vim用来将你曾经做过的行为记录下来的地方
   ~/.vimrc    是设置vim操作环境的文件 可以设置如 set autoindent等参数
10. DOS与Linux系统的换行符
    DOS 换行符 ^M$ 即CR与LF两个符号；  Linux换行符 $仅 LF一个符号
    dos2UNIX [-kn] file [newfile]    -k表示保留源文件的mtime；  -n表示保留旧文件，转换后输出一个新文件
    UNIX2dos [-kn] file [newfile]
