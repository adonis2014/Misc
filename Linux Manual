1. tail -f sys.log | grep niocVim
2. ps -C (name)
3. sudo mount -r -t nfs pa-dbc1122:/dbc/pa-dbc1122/yingyiz/ /mnt/test
4. top                                                  #check men and cpu utilization rate
5. allocate -l 1G 1gFile.img                            #create 1GB file
9. setup NFS server
10. use NetHogs to monitor bandwidth usage
11. vim operation / sudo apt-get install vim
12. sudo apt-get install openssh-server
13. ls -lh                                              # check file and size
14. df -h  # check disk space

/****************************************** File Permission and Directory *************************************************/
1. ls -al 列出所有文件名和相关属性
    drwxr-xr-x  10   zhangyingyi   staff    340   1 15 19:17    Coding
    [权限]     [连接]  [所有者]     [用户组]  [大小]   [修改时间]    [文件名]
    
    【权限】: 第一个字符：
                  [d] 表示目录
                  [-] 表示文件
                  [l] 链接文件 linkfile
             其他字符： r = read = 4; w = write = 2; x = execute = 1
    【连接】: 表示多少个文件名连接到同一个inode上。 文件的权限和属性记录到file system的inode上。

2. chgrp （change group 改变文件所属用户组）
   chown （change owner 改变文件所有者）
   chmod （change mode 改变文件的权限）
   系统所有账号记录在 /etc/passwd 中；个人密码都记录在 /etc/shadow下； 所有的用户组名都记录在 /etc/group中
   i.e.    chgrp [-R] group_name  filename/dir_name
           chown [-R] owner_name  filename/dir_name
           chmod [-R] 777 filename

3. 目录的权限
        r:  具有读目录列表的权限，可执行 ls dir
        w:  可新建文件/目录, 删除文件/目录, 重命名, 移动文件
        x:  可进入目录，使之成为work directory。也就是可以执行 cd dir

4. linux 文件种类 与 扩展名 
          [b] 是block device，存储设备，可以随机在disk的不同block上写
          [c] 是character device, 串行端口的接口设备, 如键盘，鼠标
          [s] 是sockets, 网络数据连接
          [p] 是pipe， 管道文件， FIFO
   扩展名：
          .sh   脚本或批处理文件，因为是shell写的，所以称为sh
          .tar  压缩文件

5. 目录树：
        / (root): 开机系统相关
        /usr (UNIX Software Resource): 软件安装/执行有关
        /var (variable):  与系统运作过程有关
   
   / 根目录下的常见子目录：      
        /bin:   存放常用命令的执行文件 比如：cat, chmod, chown, mv, cp等
        /boot:  存放开机会使用的文件
        /dev:   设备或接口设备以文件的形式存于此
        /etc:   系统主要的配置文件，例如：账户密码文件，各种服务的起始文件, 特别是 /etc/init.d 可以执行类似/etc/init.d/iptables start命令
        /home:  用户主文件夹
        /lib:   开机时会用到的库函数
        /sbin:  (system binary) 存放开机需要的系统执行文件
        /tmp:   暂时存放文件的地方
        
   /usr 目录下常见的子目录 （/usr 会占用最多的硬盘容量）
        /usr/bin:   存放绝大部分用户可使用的命令
        /usr/local: 安装自己下载的软件
        /usr/src:   放置源码
        /usr/sbin:  非系统正常运行所需的系统命令，比如网络服务器软件的服务命令(daemon)
   
   /var 目录下常见子目录 (/var是系统运行后，逐渐占用磁盘容量的目录，主要放置 caching，log文件)
        /var/cache: 存放运行程序的暂存文件
        /var/log: 存放登录文件
        /var/run: 存放运行程序或进程的PID
        /var/lib: 存放程序本身运行所需的数据文件    
        
/****************************************** File and Directory Management *************************************************/
1. cd - 回到刚才目录
   cd ~ 回到自己home directory
2. mkdir -m 777 dir1   配置文件的权限，直接设置
   mkdir -p dir1/dir2/dir3  直接递归创建多级目录
3. 环境变量PATH
     当执行一个命令，比如“ls”。系统会按照PATH定义的目录下查询文件名为ls的可执行文件。如果PATH定义的目录中含有多个文件名为ls的可执行文件，执行最先查到的那个
     echo $PATH 查看PATH下定义的目录
     <1> 不同身份用户默认的PATH不同，默认能够随意执行的命令也不同
     <2> PATH是可以修改的，一般用户可以通过修改PATH来执行某些位于/sbin 或 /usr/sbin下的命令
     <3> 使用绝对路径或相对路径直接执行某个命令的文件，比查询PATH来得正确
4. ls -a 列出全部文件，包括隐藏文件
   ls -d 仅列出目录本身，而不是列出目录内的文件数据
   ls -l 列出文件的权限，属性，大小，日期等信息
5. cp -p src dst 连同源文件属性一起复制过去
   cp -d src dst 若src是link file，复制文件属性而非文件本身
   cp -r src dst 递归复制，用于复制目录
   cp -a src dst 相当于 cp -pdr src dst
   cp -i src dst 若目标文件已存在，覆盖前会先询问
6. rm -i file 删除前先询问
   rm -f file 强制删除
   rm -r file 递归删除
7. mv -u src dst 若目标文件存在，且src较新，才会更新
   mv file fileNew 更改文件名
8. basename 取得路径中的文件名   basename /etc/sysconfig/network 返回network
   dirname 取得路径中的目录名    dirname /etc/sysconfig/network 返回/etc/sysconfig
9. cat (concatenate) 由第一行开始显示文件内容
   cat -n file   打印出行号，连同空白行也有行号
   cat -A file   打印出所有字符，包括各种特殊字符
   tac (cat 倒过来) 从最后一行到第一行反向显示
10. more (一页一页向后翻页)
    例如 more /etc/man.config
    space: 代表向下翻一页
    enter: 代表向下滚动一行
    q:     离开more
    /字符串: 向下查找关键字"字符串"
    
11. less (可向前向后翻页)
    例如 less /etc/man.config
    space: 代表向下翻页
    PageUp: 代表向上翻页
    /字符串: 向下查找关键字"字符串"
    q:      离开less这个程序
12. head -n file 显示前n行
    tail -n file 显示后n行
    tail -f file 持续检测这个file是否尾部有增加内容。ctrl-c才能结束
13. 文件时间
    mtime = modification time 文件内容最后更改时间
    ctime = status time       文件权限和属性最后更改时间
    atime = access time       文件最后被访问的时间
    
    ls -l --time=atime filename  查询filename文件最后被访问的时间
    ls -l --time=ctime filename  查询filename文件最后属性、权限被修改的时间
    
    touch filename                  创建一个空文件filename
    touch -t 1801241805 filename  修改文件filename的mtime和atime为2018-1-24 18:05 时间格式为[YYMMDDhhmm]

14. umask 文件默认权限
    0022 与一般权限有关的是后面三个数字，代表默认值需要减掉的权限 （第一个是特殊权限）
    默认情况下：  新建文件的权限为666 即-rw-rw-rw-， 没有执行权限
                新建目录的权限为777 即drwxrwxrwx， 开放所有权限
                
15. 文件隐藏属性    
    chattr = change attribute 更改设置文件的隐藏属性，该命令只能在Ext2/Ext3的文件系统上使用
    命令格式： chattr [+-=] [options] file/dir 其中 + 表示增加属性；- 表示删除属性；= 表示直接设置属性
    chattr +a file    设置后，file只能append数据，不能删除和修改数据
    chattr +i file    设置后，file变成immutable，不能删除、改名、设置连接，不能写入和添加数据。对于系统安全性有很大帮助, 只有root才能设置
    lsattr -a file/dir 显示所有文件(包括隐藏文件)的隐藏属性

16. 特殊文件权限
    SUID = Set UID  例如 -rws--x--x
            <1> SUID仅对二进制程序(binary program)有效，不能用在shell script上，对目录也无效。
            <2> 用户对程序要有x的可执行权限
            <3> SUID仅在执行改程序的过程中(run-time)有效
            <4> 用户将有用文件owner的权限
    SGID = Set GID   例如 -rwx--s--x 
            <1> SGID 可以用于文件或目录
            <2> 用户若对目录具有r和x的权限，该用户能够进入此目录
            <3> 用户在此目录下的effective group 会变成该目录的用户组
            <4> 若用户具有w权限，则新建文件的用户组与目录用户组相同
    SBIT = Sticky Bit 例如 drwxrwxrwt
            <1> 只针对目录有效
            <2> 如果目录加上了SBIT权限时，用户组成员只能对自己创建的文件/目录进行删除，重命名，移动，无法删除他人的文件
    SUID = 4
    SGID = 2
    SBIT = 1
    chmod 4755 filename 相当于 -rwsr-xr-x  第一个数字是特殊权限

17. which (寻找执行文件)
    which -a ifconfig 列出PATH中可以找到的ifconfig命令

18. whereis ifconfig 利用数据库查找ifconfig文件，比find要快
    locate -i keyword 利用数据库，忽略大小写，查找keyword文件，可以输入“文件的部分名称”

19. find [PATH] [options] [action]
    find /etc -mtime n  查找/etc文件下n天之前的"一天之内"被更改的文件
    find /etc -mtime +n 查找n天之前（不含n天本身）被更改过的文件
    find /etc -mtime -n 查找n天之内（含n天本身）被更改的文件
    find /etc -newer file 查找比file还要新的文件
    
    find /home -user zyy  查找home下属于zyy用户的文件
    find /home -nouser    查找不属于任何人的文件
    
    find / -name passwd   查找文件名为“passwd”的文件，支持通配符
    find / -type s        查找根目录下Socket类型的文件
    find / -perm +7000    查找文件属性含有SUID或SGID或SBIT的文件
    find / -perm -0744    查找文件权限全部包含0744的文件，例如 4755也满足，因为全部包含了0744

/****************************************** Linux Disk and File System *************************************************/
Disk = # of Cylinders, Cylinder = # of Sectors (Cylinder是partition的最小单位，Sector是物理存储最小单位， 512bytes)
第1个Sector最重要，其中内容：MBR(446bytes) + partition table(64bytes)
<1> primary分区 + extended分区最多不超过4个（硬盘限制）
<2> extended分区最多1个（操作系统限制）
<3> extended分区还可以再分出logical分区
<4> primary 和 logical分区可以格式化，extended分区不可以格式化

1. inode: 记录文件的权限、属性和数据所在block的号码，一个文件占用一个inode
   block: 存放文件的实际内容。内容过多可以占用多个block
   superblock: 记录文件系统整体信息：inode/block的总量，使用量，剩余量，文件系统格式等信息

2. 文件系统的最前面是boot sector, 后面跟着多个block group
   每个 block group = superblock + FS description + block bitmap + inode bitmap + inode table + data block
   <1> superblock: block和inode的总量, 已使用/未使用的inode/block数量, block和inode的大小(block为1K,2K,4K，inode为128 bytes)
                   FS挂载时间, 最近一次写入时间，最近一次检验磁盘时间
                   validbit 若此文件系统已挂载 则validbit=0；若未挂载 则validbit=1
   <2> FS description: 文件系统说明。记录该block group开始和技术的block号码，以及每个区段(superblock, bitmap, inodemap, datablock)位于哪个block号码之间  kc
   <3> block bitmap:  记录使用和未使用的block号码， 即哪些block是空的，帮助系统快速找到可用空间存放新文件
   <4> inode bitmap:  记录使用和未使用的inode号码
   <5> inode table:   存放所有inode的地方。
                      inode包含 文件权限、属性；文件大小；mtime, ctime, atime；文件flag(如SetUID)；block号码
                      inode记录block号码分为 12个直接，1个间接，1个双间接，1个三间接
   <6> data block:    存放所有的block的地方
                      block 大小 1KB, 2KB, 4KB三种
                      每个block最多只能放置一个文件的数据 (如果文件小于block，则该block剩余空间只能浪费)

3. dumpe2fs [-h] devicefile 列出文件系统每个区段和superblock的信息(-h会只列出superblock的信息)

4. 目录的block记录 <1> 这个目录下的文件名，<2> 文件名对应的inode号码
   文件的block就记录文件的实际内容
   被编辑过的文件在内存中设置为Dirty，可以手动用sync强迫内存中的Dirty文件写入磁盘。正常关机时，关机命令也会调用sync命令将内存数据写入磁盘

5. mount point
    将文件系统与目录树结合的操作称为挂载(mount)，挂载点一定是目录，该目录是进入该文件系统的入口
    Linux支持的文件系统: <1>传统文件系统: ext2, FAT
                       <2>日志文件系统: ext3, XFS, ReiserFS
                       <3>网络文件系统: NFS
    Linux系统通过一个名为Virtual Filesystem Switch(VFS 虚拟文件系统)的内核功能来管理所有的文件系统。

6. df 列出文件系统磁盘使用量
        df -a 列出所有系统 包括系统特有的 /proc文件系统
        df -h 以人们容易阅读的GB,MB等形式显示
        df -T 显示磁盘分区的文件系统名称 （例如 ext2）
        df -i 不用硬盘容量，以inode的数量来显示
        
   du 列出目录所占容量
        du 

